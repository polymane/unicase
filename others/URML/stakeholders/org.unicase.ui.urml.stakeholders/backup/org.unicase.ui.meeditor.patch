Index: src/org/unicase/ui/meeditor/mecontrols/AbstractMEControl.java
===================================================================
--- src/org/unicase/ui/meeditor/mecontrols/AbstractMEControl.java	(revision 12223)
+++ src/org/unicase/ui/meeditor/mecontrols/AbstractMEControl.java	(working copy)
@@ -138,6 +138,10 @@
 
 	}
 
+	public boolean doShow() {
+		return true;
+	}
+
 	/**
 	 * Shall be overriden to create the control.
 	 * 
Index: src/org/unicase/ui/meeditor/MEEditorPage.java
===================================================================
--- src/org/unicase/ui/meeditor/MEEditorPage.java	(revision 12223)
+++ src/org/unicase/ui/meeditor/MEEditorPage.java	(working copy)
@@ -261,7 +261,7 @@
 		for (IItemPropertyDescriptor itemPropertyDescriptor : attributes) {
 			AbstractMEControl meControl = controlFactory.createControl(itemPropertyDescriptor, modelElement,
 				modelElementContext);
-			if (meControl == null) {
+			if (meControl == null || !meControl.doShow()) {
 				continue;
 			}
 			meControls.add(meControl);
@@ -284,6 +284,7 @@
 				FeatureHintTooltipSupport.enableFor(control, itemPropertyDescriptor);
 				GridDataFactory.fillDefaults().span(2, 1).grab(true, true).align(SWT.FILL, SWT.BEGINNING).indent(10, 0)
 					.applyTo(control);
+				meControl.applyCustomLayoutData();
 			}
 			if (itemPropertyDescriptor.getFeature(modelElement) == problemFeature) {
 				ControlDecoration dec = new ControlDecoration(control, SWT.TOP | SWT.LEFT);
