/*
 * Copyright (c) 2007, 2008 Borland Software Corporation
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Dmitry Stadnik (Borland) - initial API and implementation
 */

«IMPORT "http://www.eclipse.org/gmf/2009/GenModel"»
«IMPORT "http://www.eclipse.org/emf/2002/Ecore"»
«IMPORT "http://www.eclipse.org/emf/2002/GenModel"»
«EXTENSION xpt::GenModelUtils»
«EXTENSION xpt::diagram::Utils»

«DEFINE doDefaultElementCreation_Normal(gmfgen::GenNode node) FOR gmfgen::TypeModelFacet-»
	«IF modelElementInitializer <> null or hasExplicitChildFeature(self.repr())-»

	«EXPAND xpt::Common::generatedMemberComment»
protected org.eclipse.emf.ecore.EObject doDefaultElementCreation() {
	«EXPAND MetaModel::NewInstance("newElement") FOR metaClass»
	«REM»added«ENDREM»
	newElement.setName("new " + newElement.eClass().getName());
	«REM»END added«ENDREM»
«IF containmentMetaFeature <> null-»
	«EXPAND MetaModel::DeclareAndAssign("owner", "getElementToEdit()") FOR containmentMetaFeature.genClass»
	«EXPAND CreateLinkUtils::addValue("owner", containmentMetaFeature.genClass, "newElement") FOR containmentMetaFeature-»
«ENDIF»
«IF hasExplicitChildFeature(self.repr())-»
	«EXPAND MetaModel::DeclareAndAssign("childHolder", "getElementToEdit()") FOR childMetaFeature.genClass»
	«EXPAND CreateLinkUtils::addValue("childHolder", childMetaFeature.genClass, "newElement") FOR childMetaFeature»
«ENDIF-»
	«EXPAND initialize(node, "newElement")-»
	return «EXPAND MetaModel::DowncastToEObject("newElement") FOR metaClass»;
}
	«ENDIF-»
«ENDDEFINE»