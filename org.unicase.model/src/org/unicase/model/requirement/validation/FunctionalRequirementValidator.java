/**
 * <copyright> </copyright> $Id$
 */
package org.unicase.model.requirement.validation;

import org.eclipse.emf.common.util.EList;
import org.unicase.model.organization.OrgUnit;
import org.unicase.model.requirement.FunctionalRequirement;
import org.unicase.model.requirement.Scenario;
import org.unicase.model.requirement.UseCase;

/*
 * A sample validator interface for {@link org.unicase.model.requirement.FunctionalRequirement}. This doesn't really do
 * anything, and it's not a real EMF artifact. It was generated by the org.eclipse.emf.examples.generator.validator
 * plug-in to illustrate how EMF's code generator can be extended. This can be disabled with -vmargs
 * -Dorg.eclipse.emf.examples.generator.validator=false.
 */
public interface FunctionalRequirementValidator {
	boolean validate();

	boolean validateRefinedRequirement(FunctionalRequirement value);

	boolean validateStoryPoints(int value);

	boolean validatePriority(int value);

	boolean validateRefiningRequirements(EList<FunctionalRequirement> value);

	boolean validateUseCases(EList<UseCase> value);

	boolean validateScenarios(EList<Scenario> value);

	boolean validateReviewed(boolean value);

	boolean validateStakeholder(OrgUnit value);

	boolean validateCost(int value);
}
