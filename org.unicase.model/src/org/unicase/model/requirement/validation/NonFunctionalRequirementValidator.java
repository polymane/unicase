/**
 * <copyright> </copyright> $Id$
 */
package org.unicase.model.requirement.validation;

import org.eclipse.emf.common.util.EList;
import org.unicase.model.requirement.Scenario;
import org.unicase.model.requirement.UseCase;

/*
 * A sample validator interface for {@link org.unicase.model.requirement.NonFunctionalRequirement}. This doesn't really
 * do anything, and it's not a real EMF artifact. It was generated by the org.eclipse.emf.examples.generator.validator
 * plug-in to illustrate how EMF's code generator can be extended. This can be disabled with -vmargs
 * -Dorg.eclipse.emf.examples.generator.validator=false.
 */
public interface NonFunctionalRequirementValidator {
	boolean validate();

	boolean validateRestrictedScenarios(EList<Scenario> value);

	boolean validateRestrictedUseCases(EList<UseCase> value);
}
