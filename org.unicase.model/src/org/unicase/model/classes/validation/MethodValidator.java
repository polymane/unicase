/**
 * <copyright> </copyright> $Id$
 */
package org.unicase.model.classes.validation;

import org.eclipse.emf.common.util.EList;
import org.unicase.model.classes.Method;
import org.unicase.model.classes.MethodArgument;
import org.unicase.model.classes.ScopeType;
import org.unicase.model.classes.VisibilityType;
import org.unicase.model.requirement.Scenario;

/*
 * A sample validator interface for {@link org.unicase.model.classes.Method}. This doesn't really do anything, and it's
 * not a real EMF artifact. It was generated by the org.eclipse.emf.examples.generator.validator plug-in to illustrate
 * how EMF's code generator can be extended. This can be disabled with -vmargs
 * -Dorg.eclipse.emf.examples.generator.validator=false.
 */
public interface MethodValidator {
	boolean validate();

	boolean validateVisibility(VisibilityType value);

	boolean validateScope(ScopeType value);

	boolean validateDefiningClass(org.unicase.model.classes.Class value);

	boolean validateReturnType(String value);

	boolean validateSignature(String value);

	boolean validateArguments(EList<MethodArgument> value);

	boolean validateProperties(String value);

	boolean validateLabel(String value);

	boolean validateStubbed(boolean value);

	boolean validateCalledMethods(EList<Method> value);

	boolean validateCallingMethods(EList<Method> value);

	boolean validateDemoParticipations(EList<Scenario> value);
}
