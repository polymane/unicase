/**
 * <copyright> </copyright> $Id$
 */
package org.unicase.model.task.validation;

import java.util.Date;

import org.eclipse.emf.common.util.EList;
import org.unicase.model.change.ModelChangePackage;
import org.unicase.model.organization.OrgUnit;
import org.unicase.model.organization.User;
import org.unicase.model.task.WorkItem;
import org.unicase.model.task.WorkPackage;

/*
 * A sample validator interface for {@link org.unicase.model.task.WorkItem}. This doesn't really do anything, and it's
 * not a real EMF artifact. It was generated by the org.eclipse.emf.examples.generator.validator plug-in to illustrate
 * how EMF's code generator can be extended. This can be disabled with -vmargs
 * -Dorg.eclipse.emf.examples.generator.validator=false.
 */
public interface WorkItemValidator {
	boolean validate();

	boolean validateContainingWorkpackage(WorkPackage value);

	boolean validateAssociatedChangePackages(EList<ModelChangePackage> value);

	boolean validatePredecessors(EList<WorkItem> value);

	boolean validateSuccessors(EList<WorkItem> value);

	boolean validateAssignee(OrgUnit value);

	boolean validateReviewer(User value);

	boolean validateParticipants(EList<OrgUnit> value);

	boolean validateDueDate(Date value);

	boolean validateEstimate(int value);

	boolean validateEffort(int value);

	boolean validatePriority(int value);

	boolean validateResolved(boolean value);
}
