{"name":"Unicase","tagline":"Automatically exported from code.google.com/p/unicase","body":"UNICASE is a CASE-tool that supports modeling artifacts of a software engineering project, such as components and tasks. All artifacts in UNICASE are part of one unified model, and we refer to them as model elements. UNICASE provides an initial set of model elements from two domains, the system model and the project model. Model elements from the system model describe the system under construction, such as functional requirements, use cases, components or UML artifacts. Model elements from the project model describe the on-going project, such as tasks, bug reports, the organizational structure, iterations or meetings. Since the UNICASE model explicitly defines the associations among model elements by model links it enables traceability even across domain boundaries. For example, a use case can be associated with the respective action items that are implementing the use case providing traceability from the requirements engineering to the task breakdown structure domain. The models are stored and versioned on a server comparable to svn but customized for models. Client and server are easily extensible to support integrating new models into the unified model. UNICASE is based on the Eclipse platform including EMF and GMF. It can also be used as a framework to build modeling applications that reuse its repository and visualization capabilities. The project is open-source and released under the Eclipse Public License v 1.0 (EPL). It builds on our experience from the Sysiphus project in building a CASE tool.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}