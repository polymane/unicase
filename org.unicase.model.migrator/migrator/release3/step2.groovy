import org.eclipse.emf.ecore.*

/**
 * Converts the rich text string as generated by the MERichTextContol to HTML.
 * 
 * @param richText the input string
 * @return the converted HTML text
 */
public static String getHTMLFromRichText(String richText) {
	return richText;
}

//change migration
getElementById = { id ->
	def element = model.IdentifiableElement.allInstances.find{e -> id.equals(e.identifier)} 
	if(element == null) {
		println "id " + id + " not found"
	}
	return element
}

isFeatureChange = { operation, EStructuralFeature feature ->
	if(feature.name.equals(operation.featureName)) {
		def id = operation.modelElementId.id
		def element = getElementById(id)
		if(element == null || element.instanceOf(feature.eContainingClass)) {
			return true
		}
	}
	return false
}

for(operation in esmodel.versioning.operations.AttributeOperation.allInstances) {
	if(isFeatureChange(operation, model.ModelElement.description)) {
		if(operation.oldValue != null) {
			operation.oldValue = getHTMLFromRichText(operation.oldValue)
		}
		if(operation.newValue != null) {
			operation.newValue = getHTMLFromRichText(operation.newValue)
		}
	}
}

// model migration
for(m in model.ModelElement.allInstances) {
	if(m.description != null) {
		m.description = getHTMLFromRichText(m.description)
	}
}