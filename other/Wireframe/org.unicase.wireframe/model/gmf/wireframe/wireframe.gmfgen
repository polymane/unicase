<?xml version="1.0" encoding="UTF-8"?>
<gmfgen:GenEditorGenerator xmi:version="2.0"
    xmlns:xmi="http://www.omg.org/XMI"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:gmfgen="http://www.eclipse.org/gmf/2009/GenModel" copyrightText="&lt;copyright> Copyright (c) 2009-2012 Chair of Applied Software Engineering, Technische Universität München (TUM).&#xD;&#xA;All rights reserved. This program and the accompanying materials are made available under the terms of&#xD;&#xA;the Eclipse Public License v1.0 which accompanies this distribution,&#xD;&#xA;and is available at http://www.eclipse.org/legal/epl-v10.html &lt;/copyright>">
  <diagram
      visualID="45"
      editPartClassName="PanelEditPart"
      itemSemanticEditPolicyClassName="PanelItemSemanticEditPolicy"
      canonicalEditPolicyClassName="PanelCanonicalEditPolicy"
      iconProviderPriority="Low"
      validationProviderPriority="Low">
    <diagramRunTimeClass
        href="../../../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Diagram"/>
    <elementType
        xsi:type="gmfgen:MetamodelType"
        editHelperClassName="PanelEditHelper"/>
    <viewmap
        xsi:type="gmfgen:FigureViewmap"
        figureQualifiedClassName="org.eclipse.draw2d.FreeformLayer"/>
    <domainDiagramElement
        href="../../wireframe.genmodel#//wireframe/Panel"/>
    <topLevelNodes
        visualID="2003"
        editPartClassName="WindowEditPart"
        itemSemanticEditPolicyClassName="WindowItemSemanticEditPolicy"
        notationViewFactoryClassName="WindowViewFactory"
        canonicalEditPolicyClassName="WindowCanonicalEditPolicy"
        graphicalNodeEditPolicyClassName="WindowGraphicalNodeEditPolicy"
        createCommandClassName="WindowCreateCommand">
      <diagramRunTimeClass
          href="../../../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:MetamodelType"
          editHelperClassName="WindowEditHelper"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="WindowDescriptor"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class WindowDescriptor extends org.eclipse.draw2d.RectangleFigure {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fWindow_text; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public WindowDescriptor() {&#xA;&#x9;&#x9;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutThis = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutThis.numColumns = 1;&#xA;&#x9;layoutThis.makeColumnsEqualWidth = true;&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;this.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(453)&#xA;, getMapMode().DPtoLP(280)&#xA;));&#xA;this.setMaximumSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(901)&#xA;, getMapMode().DPtoLP(530)&#xA;));&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;fWindow_text = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;&#xA;fWindow_text.setText(&quot;My Window&quot;);&#xA;&#xA;fWindow_text.setFont(FWINDOW_TEXT_FONT);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFWindow_text = new org.eclipse.draw2d.GridData();&#xA;constraintFWindow_text.verticalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFWindow_text.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFWindow_text.horizontalIndent = 0;&#xA;constraintFWindow_text.horizontalSpan = 1;&#xA;constraintFWindow_text.verticalSpan = 1;&#xA;constraintFWindow_text.grabExcessHorizontalSpace = false;&#xA;constraintFWindow_text.grabExcessVerticalSpace = false;&#xA;this.add(fWindow_text, constraintFWindow_text);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.gmf.runtime.draw2d.ui.render.figures.ScalableImageFigure windowImageFigure0 = new org.eclipse.gmf.runtime.draw2d.ui.render.figures.ScalableImageFigure();&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintWindowImageFigure0 = new org.eclipse.draw2d.GridData();&#xA;constraintWindowImageFigure0.verticalAlignment = org.eclipse.draw2d.GridData.END;&#xA;constraintWindowImageFigure0.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintWindowImageFigure0.horizontalIndent = 0;&#xA;constraintWindowImageFigure0.horizontalSpan = 1;&#xA;constraintWindowImageFigure0.verticalSpan = 1;&#xA;constraintWindowImageFigure0.grabExcessHorizontalSpace = true;&#xA;constraintWindowImageFigure0.grabExcessVerticalSpace = true;&#xA;this.add(windowImageFigure0, constraintWindowImageFigure0);&#xA;&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getWindow_text() {&#xA;&#x9;&#x9;return fWindow_text;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FWINDOW_TEXT_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), &quot;Arial&quot;, 10, org.eclipse.swt.SWT.BOLD);&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:DefaultSizeAttributes"
            width="453"
            height="280"/>
      </viewmap>
      <behaviour
          xsi:type="gmfgen:OpenDiagramBehaviour"/>
      <modelFacet>
        <metaClass
            href="../../wireframe.genmodel#//wireframe/Window"/>
        <containmentMetaFeature
            href="../../wireframe.genmodel#//wireframe/Panel/widgets"/>
        <childMetaFeature
            href="../../wireframe.genmodel#//wireframe/Panel/widgets"/>
      </modelFacet>
      <labels
          visualID="5003"
          editPartClassName="WindowTextEditPart"
          itemSemanticEditPolicyClassName="WindowTextItemSemanticEditPolicy"
          notationViewFactoryClassName="WindowTextViewFactory">
        <diagramRunTimeClass
            href="../../../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getWindow_text"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.0"
            viewPattern="{0}"
            editorPattern="{0}"
            editPattern="{0}">
          <metaFeatures
              href="../../wireframe.genmodel#//wireframe/Widget/text"/>
        </modelFacet>
      </labels>
    </topLevelNodes>
    <topLevelNodes
        visualID="2004"
        editPartClassName="LabelEditPart"
        itemSemanticEditPolicyClassName="LabelItemSemanticEditPolicy"
        notationViewFactoryClassName="LabelViewFactory"
        canonicalEditPolicyClassName="LabelCanonicalEditPolicy"
        graphicalNodeEditPolicyClassName="LabelGraphicalNodeEditPolicy"
        createCommandClassName="LabelCreateCommand">
      <diagramRunTimeClass
          href="../../../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:MetamodelType"
          editHelperClassName="LabelEditHelper"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="LabelDescriptor"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class LabelDescriptor extends org.eclipse.draw2d.RectangleFigure {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fLabel_text; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public LabelDescriptor() {&#xA;&#x9;&#x9;&#x9;&#x9;this.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(100)&#xA;, getMapMode().DPtoLP(30)&#xA;));&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;fLabel_text = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;&#xA;fLabel_text.setText(&quot;My Label&quot;);&#xA;&#xA;fLabel_text.setFont(FLABEL_TEXT_FONT);&#xA;&#xA;&#xA;&#xA;this.add(fLabel_text);&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getLabel_text() {&#xA;&#x9;&#x9;return fLabel_text;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FLABEL_TEXT_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), &quot;Arial&quot;, 10, org.eclipse.swt.SWT.BOLD);&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:DefaultSizeAttributes"
            width="100"/>
      </viewmap>
      <behaviour
          xsi:type="gmfgen:OpenDiagramBehaviour"/>
      <modelFacet>
        <metaClass
            href="../../wireframe.genmodel#//wireframe/Label"/>
        <containmentMetaFeature
            href="../../wireframe.genmodel#//wireframe/Panel/widgets"/>
        <childMetaFeature
            href="../../wireframe.genmodel#//wireframe/Panel/widgets"/>
      </modelFacet>
      <labels
          visualID="5001"
          editPartClassName="LabelTextEditPart"
          itemSemanticEditPolicyClassName="LabelTextItemSemanticEditPolicy"
          notationViewFactoryClassName="LabelTextViewFactory">
        <diagramRunTimeClass
            href="../../../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getLabel_text"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.0"
            viewPattern="{0}"
            editorPattern="{0}"
            editPattern="{0}">
          <metaFeatures
              href="../../wireframe.genmodel#//wireframe/Widget/text"/>
        </modelFacet>
      </labels>
    </topLevelNodes>
    <topLevelNodes
        visualID="2005"
        editPartClassName="TextFieldEditPart"
        itemSemanticEditPolicyClassName="TextFieldItemSemanticEditPolicy"
        notationViewFactoryClassName="TextFieldViewFactory"
        canonicalEditPolicyClassName="TextFieldCanonicalEditPolicy"
        graphicalNodeEditPolicyClassName="TextFieldGraphicalNodeEditPolicy"
        createCommandClassName="TextFieldCreateCommand">
      <diagramRunTimeClass
          href="../../../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:MetamodelType"
          editHelperClassName="TextFieldEditHelper"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="TextFieldDescriptor"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class TextFieldDescriptor extends org.eclipse.draw2d.RectangleFigure {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fTextField_text; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public TextFieldDescriptor() {&#xA;&#x9;&#x9;&#x9;&#x9;this.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(150)&#xA;, getMapMode().DPtoLP(100)&#xA;));&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;fTextField_text = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;&#xA;fTextField_text.setText(&quot;My TextField&quot;);&#xA;&#xA;this.add(fTextField_text);&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getTextField_text() {&#xA;&#x9;&#x9;return fTextField_text;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:DefaultSizeAttributes"
            width="150"
            height="100"/>
      </viewmap>
      <behaviour
          xsi:type="gmfgen:OpenDiagramBehaviour"/>
      <modelFacet>
        <metaClass
            href="../../wireframe.genmodel#//wireframe/TextField"/>
        <containmentMetaFeature
            href="../../wireframe.genmodel#//wireframe/Panel/widgets"/>
        <childMetaFeature
            href="../../wireframe.genmodel#//wireframe/Panel/widgets"/>
      </modelFacet>
      <labels
          visualID="5004"
          editPartClassName="TextFieldTextEditPart"
          itemSemanticEditPolicyClassName="TextFieldTextItemSemanticEditPolicy"
          notationViewFactoryClassName="TextFieldTextViewFactory">
        <diagramRunTimeClass
            href="../../../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getTextField_text"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel"/>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.0"
            viewPattern="{0}"
            editorPattern="{0}"
            editPattern="{0}">
          <metaFeatures
              href="../../wireframe.genmodel#//wireframe/Widget/text"/>
        </modelFacet>
      </labels>
    </topLevelNodes>
    <topLevelNodes
        visualID="2006"
        editPartClassName="ButtonEditPart"
        itemSemanticEditPolicyClassName="ButtonItemSemanticEditPolicy"
        notationViewFactoryClassName="ButtonViewFactory"
        canonicalEditPolicyClassName="ButtonCanonicalEditPolicy"
        graphicalNodeEditPolicyClassName="ButtonGraphicalNodeEditPolicy"
        createCommandClassName="ButtonCreateCommand">
      <diagramRunTimeClass
          href="../../../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:MetamodelType"
          editHelperClassName="ButtonEditHelper"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="ButtonDescriptor"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class ButtonDescriptor extends org.eclipse.draw2d.RectangleFigure {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fButton_text; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public ButtonDescriptor() {&#xA;&#x9;&#x9;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutThis = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutThis.numColumns = 1;&#xA;&#x9;layoutThis.makeColumnsEqualWidth = false;&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;this.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(36)&#xA;, getMapMode().DPtoLP(36)&#xA;));&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;fButton_text = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;&#xA;fButton_text.setText(&quot;My Button&quot;);&#xA;&#xA;fButton_text.setFont(FBUTTON_TEXT_FONT);&#xA;&#xA;&#xA;&#xA;this.add(fButton_text);&#xA;&#xA;&#xA;&#xA;org.eclipse.gmf.runtime.draw2d.ui.render.figures.ScalableImageFigure buttonImageFigure0 = new org.eclipse.gmf.runtime.draw2d.ui.render.figures.ScalableImageFigure();&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintButtonImageFigure0 = new org.eclipse.draw2d.GridData();&#xA;constraintButtonImageFigure0.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintButtonImageFigure0.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintButtonImageFigure0.horizontalIndent = 0;&#xA;constraintButtonImageFigure0.horizontalSpan = 1;&#xA;constraintButtonImageFigure0.verticalSpan = 1;&#xA;constraintButtonImageFigure0.grabExcessHorizontalSpace = true;&#xA;constraintButtonImageFigure0.grabExcessVerticalSpace = true;&#xA;this.add(buttonImageFigure0, constraintButtonImageFigure0);&#xA;&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getButton_text() {&#xA;&#x9;&#x9;return fButton_text;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FBUTTON_TEXT_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), &quot;Arial&quot;, 10, org.eclipse.swt.SWT.BOLD);&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:DefaultSizeAttributes"
            width="36"
            height="36"/>
      </viewmap>
      <behaviour
          xsi:type="gmfgen:OpenDiagramBehaviour"/>
      <modelFacet>
        <metaClass
            href="../../wireframe.genmodel#//wireframe/Button"/>
        <containmentMetaFeature
            href="../../wireframe.genmodel#//wireframe/Panel/widgets"/>
        <childMetaFeature
            href="../../wireframe.genmodel#//wireframe/Panel/widgets"/>
      </modelFacet>
    </topLevelNodes>
    <topLevelNodes
        visualID="2007"
        editPartClassName="TextEditPart"
        itemSemanticEditPolicyClassName="TextItemSemanticEditPolicy"
        notationViewFactoryClassName="TextViewFactory"
        canonicalEditPolicyClassName="TextCanonicalEditPolicy"
        graphicalNodeEditPolicyClassName="TextGraphicalNodeEditPolicy"
        createCommandClassName="TextCreateCommand">
      <diagramRunTimeClass
          href="../../../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:MetamodelType"
          editHelperClassName="TextEditHelper"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="TextDescriptor"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class TextDescriptor extends org.eclipse.draw2d.RectangleFigure {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fText_text; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public TextDescriptor() {&#xA;&#x9;&#x9;&#x9;&#x9;this.setMinimumSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(100)&#xA;, getMapMode().DPtoLP(200)&#xA;));&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;fText_text = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;&#xA;fText_text.setText(&quot;My text.&quot;);&#xA;&#xA;this.add(fText_text);&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getText_text() {&#xA;&#x9;&#x9;return fText_text;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;"/>
      <behaviour
          xsi:type="gmfgen:OpenDiagramBehaviour"/>
      <modelFacet>
        <metaClass
            href="../../wireframe.genmodel#//wireframe/Text"/>
        <containmentMetaFeature
            href="../../wireframe.genmodel#//wireframe/Panel/widgets"/>
        <childMetaFeature
            href="../../wireframe.genmodel#//wireframe/Panel/widgets"/>
      </modelFacet>
      <labels
          visualID="5002"
          editPartClassName="TextTextEditPart"
          itemSemanticEditPolicyClassName="TextTextItemSemanticEditPolicy"
          notationViewFactoryClassName="TextTextViewFactory">
        <diagramRunTimeClass
            href="../../../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getText_text"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel"/>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.0"
            viewPattern="{0}"
            editorPattern="{0}"
            editPattern="{0}">
          <metaFeatures
              href="../../wireframe.genmodel#//wireframe/Widget/text"/>
        </modelFacet>
      </labels>
    </topLevelNodes>
    <topLevelNodes
        visualID="2008"
        editPartClassName="ImageEditPart"
        itemSemanticEditPolicyClassName="ImageItemSemanticEditPolicy"
        notationViewFactoryClassName="ImageViewFactory"
        canonicalEditPolicyClassName="ImageCanonicalEditPolicy"
        graphicalNodeEditPolicyClassName="ImageGraphicalNodeEditPolicy"
        createCommandClassName="ImageCreateCommand">
      <diagramRunTimeClass
          href="../../../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:MetamodelType"
          editHelperClassName="ImageEditHelper"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="ImageDescriptor"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class ImageDescriptor extends org.eclipse.draw2d.RectangleFigure {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fImage_text; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public ImageDescriptor() {&#xA;&#x9;&#x9;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutThis = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutThis.numColumns = 1;&#xA;&#x9;layoutThis.makeColumnsEqualWidth = true;&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;this.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(303)&#xA;, getMapMode().DPtoLP(250)&#xA;));&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;org.eclipse.gmf.runtime.draw2d.ui.render.figures.ScalableImageFigure imageImageFigure0 = new org.eclipse.gmf.runtime.draw2d.ui.render.figures.ScalableImageFigure();&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintImageImageFigure0 = new org.eclipse.draw2d.GridData();&#xA;constraintImageImageFigure0.verticalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintImageImageFigure0.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintImageImageFigure0.horizontalIndent = 0;&#xA;constraintImageImageFigure0.horizontalSpan = 1;&#xA;constraintImageImageFigure0.verticalSpan = 1;&#xA;constraintImageImageFigure0.grabExcessHorizontalSpace = true;&#xA;constraintImageImageFigure0.grabExcessVerticalSpace = true;&#xA;this.add(imageImageFigure0, constraintImageImageFigure0);&#xA;&#xA;&#xA;&#xA;&#xA;fImage_text = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;&#xA;fImage_text.setText(&quot;My Image&quot;);&#xA;&#xA;fImage_text.setFont(FIMAGE_TEXT_FONT);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFImage_text = new org.eclipse.draw2d.GridData();&#xA;constraintFImage_text.verticalAlignment = org.eclipse.draw2d.GridData.END;&#xA;constraintFImage_text.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFImage_text.horizontalIndent = 0;&#xA;constraintFImage_text.horizontalSpan = 1;&#xA;constraintFImage_text.verticalSpan = 1;&#xA;constraintFImage_text.grabExcessHorizontalSpace = false;&#xA;constraintFImage_text.grabExcessVerticalSpace = false;&#xA;this.add(fImage_text, constraintFImage_text);&#xA;&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getImage_text() {&#xA;&#x9;&#x9;return fImage_text;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FIMAGE_TEXT_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), &quot;Arial&quot;, 10, org.eclipse.swt.SWT.BOLD);&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:DefaultSizeAttributes"
            width="303"
            height="250"/>
      </viewmap>
      <behaviour
          xsi:type="gmfgen:OpenDiagramBehaviour"/>
      <modelFacet>
        <metaClass
            href="../../wireframe.genmodel#//wireframe/Image"/>
        <containmentMetaFeature
            href="../../wireframe.genmodel#//wireframe/Panel/widgets"/>
        <childMetaFeature
            href="../../wireframe.genmodel#//wireframe/Panel/widgets"/>
      </modelFacet>
      <labels
          visualID="5006"
          editPartClassName="ImageTextEditPart"
          itemSemanticEditPolicyClassName="ImageTextItemSemanticEditPolicy"
          notationViewFactoryClassName="ImageTextViewFactory">
        <diagramRunTimeClass
            href="../../../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getImage_text"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.0"
            viewPattern="{0}"
            editorPattern="{0}"
            editPattern="{0}">
          <metaFeatures
              href="../../wireframe.genmodel#//wireframe/Widget/text"/>
        </modelFacet>
      </labels>
    </topLevelNodes>
    <palette>
      <groups
          title="WireframeTools"
          description="These tools can be used to create a wireframe diagram.">
        <entries
            xsi:type="gmfgen:ToolEntry"
            title="Window"
            description="Tool for creating a window."
            genNodes="//@diagram/@topLevelNodes.0"/>
        <entries
            xsi:type="gmfgen:ToolEntry"
            title="Label"
            description="Tool for creating a label."
            genNodes="//@diagram/@topLevelNodes.1"/>
        <entries
            xsi:type="gmfgen:ToolEntry"
            title="TextField"
            description="Tool for creating a text field."
            genNodes="//@diagram/@topLevelNodes.2"/>
        <entries
            xsi:type="gmfgen:ToolEntry"
            title="Button"
            description="Tool for creating a button."
            genNodes="//@diagram/@topLevelNodes.3"/>
        <entries
            xsi:type="gmfgen:ToolEntry"
            title="Text"
            description="Tool for creating text."
            genNodes="//@diagram/@topLevelNodes.4"/>
        <entries
            xsi:type="gmfgen:ToolEntry"
            title="Image"
            description="Tool for creating an image."
            genNodes="//@diagram/@topLevelNodes.5"/>
      </groups>
    </palette>
    <preferencePages
        xsi:type="gmfgen:GenStandardPreferencePage"
        iD="org.unicase.wireframe.diagram.general"
        name="Wireframe Diagram">
      <children
          xsi:type="gmfgen:GenStandardPreferencePage"
          iD="org.unicase.wireframe.diagram.appearance"
          name="Appearance"
          kind="Appearance"/>
      <children
          xsi:type="gmfgen:GenStandardPreferencePage"
          iD="org.unicase.wireframe.diagram.connections"
          name="Connections"
          kind="Connections"/>
      <children
          xsi:type="gmfgen:GenStandardPreferencePage"
          iD="org.unicase.wireframe.diagram.printing"
          name="Printing"
          kind="Printing"/>
      <children
          xsi:type="gmfgen:GenStandardPreferencePage"
          iD="org.unicase.wireframe.diagram.rulersAndGrid"
          name="Rulers And Grid"
          kind="RulersAndGrid"/>
    </preferencePages>
  </diagram>
  <plugin>
    <requiredPlugins>org.eclipse.gmf.tooling.runtime</requiredPlugins>
    <requiredPlugins>org.eclipse.draw2d</requiredPlugins>
  </plugin>
  <editor/>
  <navigator>
    <childReferences
        child="//@diagram"/>
    <childReferences
        parent="//@diagram"
        child="//@diagram/@topLevelNodes.0"/>
    <childReferences
        parent="//@diagram"
        child="//@diagram/@topLevelNodes.1"/>
    <childReferences
        parent="//@diagram"
        child="//@diagram/@topLevelNodes.2"/>
    <childReferences
        parent="//@diagram"
        child="//@diagram/@topLevelNodes.3"/>
    <childReferences
        parent="//@diagram"
        child="//@diagram/@topLevelNodes.4"/>
    <childReferences
        parent="//@diagram"
        child="//@diagram/@topLevelNodes.5"/>
  </navigator>
  <diagramUpdater/>
  <propertySheet>
    <tabs
        xsi:type="gmfgen:GenStandardPropertyTab"
        iD="appearance"/>
    <tabs
        xsi:type="gmfgen:GenStandardPropertyTab"
        iD="diagram"/>
    <tabs
        xsi:type="gmfgen:GenCustomPropertyTab"
        iD="domain"
        label="Core">
      <filter
          xsi:type="gmfgen:TypeTabFilter">
        <types>org.eclipse.gmf.runtime.notation.View</types>
        <types>org.eclipse.gef.EditPart</types>
        <generatedTypes>abstractNavigatorItem</generatedTypes>
      </filter>
    </tabs>
  </propertySheet>
  <domainGenModel
      href="../../wireframe.genmodel#/"/>
  <labelParsers
      extensibleViaService="true">
    <implementations
        xsi:type="gmfgen:PredefinedParser"
        uses="//@diagram/@topLevelNodes.0/@labels.0/@modelFacet //@diagram/@topLevelNodes.1/@labels.0/@modelFacet //@diagram/@topLevelNodes.2/@labels.0/@modelFacet //@diagram/@topLevelNodes.4/@labels.0/@modelFacet //@diagram/@topLevelNodes.5/@labels.0/@modelFacet"/>
  </labelParsers>
  <contextMenus
      context="//@diagram">
    <items
        xsi:type="gmfgen:LoadResourceAction"/>
  </contextMenus>
</gmfgen:GenEditorGenerator>
