/*
 * Copyright (c) 2007 Borland Software Corporation
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Dmitry Stadnik (Borland) - initial API and implementation
 */

«IMPORT "http://www.eclipse.org/gmf/2008/GenModel"»
«IMPORT "http://www.eclipse.org/emf/2002/Ecore"»
«EXTENSION xpt::diagram::ViewmapAttributesUtils»

«DEFINE NodeViewFactory FOR gmfgen::GenNode-»
«EXPAND xpt::Common::copyright FOR getDiagram().editorGen-»
package «getDiagram().notationViewFactoriesPackageName»;

«EXPAND xpt::Common::generatedClassComment»
public class «notationViewFactoryClassName» extends org.eclipse.gmf.runtime.diagram.ui.view.factories.AbstractShapeViewFactory {

	«EXPAND createStyles-»
	
	«EXPAND decorateView-»
	«EXPAND additions-»
}
«ENDDEFINE»

«DEFINE createStyles FOR gmfgen::GenNode-»
	«EXPAND xpt::Common::generatedMemberComment»
	protected java.util.List createStyles(org.eclipse.gmf.runtime.notation.View view) {
		java.util.List styles = new java.util.ArrayList();
		«EXPAND xpt::diagram::views::Utils::addShapeStyle("styles") FOR viewmap-»
		«EXPAND xpt::diagram::views::Utils::addLinkedDiagramStyle("styles")-»
		«EXPAND xpt::diagram::views::Utils::addCustomStyles("styles")-»
		return styles;
	}
«ENDDEFINE»

«DEFINE decorateView FOR gmfgen::GenNode-»
	«EXPAND xpt::Common::generatedMemberComment»
	protected void decorateView(org.eclipse.gmf.runtime.notation.View containerView, org.eclipse.gmf.runtime.notation.View view,
			org.eclipse.core.runtime.IAdaptable semanticAdapter, String semanticHint, int index, boolean persisted) {
		«EXPAND xpt::diagram::views::Utils::updateSemanticHint-»
		super.decorateView(containerView, view, semanticAdapter, semanticHint, index, persisted);
		«EXPAND addShortcut-»
		«EXPAND xpt::diagram::views::Utils::foregroundColour("view") FOR viewmap-»
		«EXPAND xpt::diagram::views::Utils::backgroundColour("view") FOR viewmap-»
		«IF labels.size() > 0 || compartments.size() > 0-»
		org.eclipse.core.runtime.IAdaptable eObjectAdapter = null;
			«EXPAND xpt::diagram::views::Utils::domainElementAdapter("eObjectAdapter") FOR modelFacet-»
			«EXPAND xpt::diagram::views::Utils::createChildNode FOREACH labels-»
			«EXPAND xpt::diagram::views::Utils::createChildNode FOREACH compartments-»
		«ENDIF-»
	}
«ENDDEFINE»

«DEFINE addShortcut FOR gmfgen::GenNode-»
«ENDDEFINE»

«DEFINE addShortcut FOR gmfgen::GenTopLevelNode-»
	if (!«getDiagram().getEditPartQualifiedClassName()».MODEL_ID.equals(
			«getDiagram().getVisualIDRegistryQualifiedClassName()».getModelID(containerView))) {
		«EXPAND xpt::Common::addShortcutAnnotation("view") FOR getDiagram()-»
	}
«ENDDEFINE»

«DEFINE additions FOR gmfgen::GenNode»«ENDDEFINE»
