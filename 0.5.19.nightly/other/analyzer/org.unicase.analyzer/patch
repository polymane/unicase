### Eclipse Workspace Patch 1.0
#P org.unicase.analyzer
Index: src/org/unicase/analyzer/iterator/impl/VersionIteratorImpl.java
===================================================================
--- src/org/unicase/analyzer/iterator/impl/VersionIteratorImpl.java	(revision 4969)
+++ src/org/unicase/analyzer/iterator/impl/VersionIteratorImpl.java	(working copy)
@@ -23,6 +23,8 @@
 import org.unicase.analyzer.iterator.VersionSpecQuery;
 import org.unicase.emfstore.esmodel.ProjectId;
 import org.unicase.emfstore.esmodel.versioning.ChangePackage;
+import org.unicase.emfstore.esmodel.versioning.HistoryInfo;
+import org.unicase.emfstore.esmodel.versioning.HistoryQuery;
 import org.unicase.emfstore.esmodel.versioning.PrimaryVersionSpec;
 import org.unicase.emfstore.esmodel.versioning.VersionSpec;
 import org.unicase.emfstore.esmodel.versioning.VersioningFactory;
@@ -55,9 +57,9 @@
  */
 public class VersionIteratorImpl extends EObjectImpl implements VersionIterator {
 	/**
-	 * The default value of the '{@link #getStepLength() <em>Step Length</em>}' attribute.
-	 * <!-- begin-user-doc --> <!--
+	 * The default value of the '{@link #getStepLength() <em>Step Length</em>}' attribute. <!-- begin-user-doc --> <!--
 	 * end-user-doc -->
+	 * 
 	 * @see #getStepLength()
 	 * @generated
 	 * @ordered
@@ -65,9 +67,9 @@
 	protected static final int STEP_LENGTH_EDEFAULT = 0;
 
 	/**
-	 * The cached value of the '{@link #getStepLength() <em>Step Length</em>}' attribute.
-	 * <!-- begin-user-doc --> <!--
+	 * The cached value of the '{@link #getStepLength() <em>Step Length</em>}' attribute. <!-- begin-user-doc --> <!--
 	 * end-user-doc -->
+	 * 
 	 * @see #getStepLength()
 	 * @generated
 	 * @ordered
@@ -75,9 +77,9 @@
 	protected int stepLength = STEP_LENGTH_EDEFAULT;
 
 	/**
-	 * The cached value of the '{@link #getProjectId() <em>Project Id</em>}' containment reference.
-	 * <!-- begin-user-doc
+	 * The cached value of the '{@link #getProjectId() <em>Project Id</em>}' containment reference. <!-- begin-user-doc
 	 * --> <!-- end-user-doc -->
+	 * 
 	 * @see #getProjectId()
 	 * @generated
 	 * @ordered
@@ -85,9 +87,9 @@
 	protected ProjectId projectId;
 
 	/**
-	 * The default value of the '{@link #isForward() <em>Forward</em>}' attribute.
-	 * <!-- begin-user-doc --> <!--
+	 * The default value of the '{@link #isForward() <em>Forward</em>}' attribute. <!-- begin-user-doc --> <!--
 	 * end-user-doc -->
+	 * 
 	 * @see #isForward()
 	 * @generated
 	 * @ordered
@@ -95,9 +97,9 @@
 	protected static final boolean FORWARD_EDEFAULT = false;
 
 	/**
-	 * The cached value of the '{@link #isForward() <em>Forward</em>}' attribute.
-	 * <!-- begin-user-doc --> <!--
+	 * The cached value of the '{@link #isForward() <em>Forward</em>}' attribute. <!-- begin-user-doc --> <!--
 	 * end-user-doc -->
+	 * 
 	 * @see #isForward()
 	 * @generated
 	 * @ordered
@@ -135,9 +137,9 @@
 	protected VersionSpecQuery versionSpecQuery;
 
 	/**
-	 * The default value of the '{@link #isDefault() <em>Default</em>}' attribute.
-	 * <!-- begin-user-doc --> <!--
+	 * The default value of the '{@link #isDefault() <em>Default</em>}' attribute. <!-- begin-user-doc --> <!--
 	 * end-user-doc -->
+	 * 
 	 * @see #isDefault()
 	 * @generated
 	 * @ordered
@@ -145,9 +147,9 @@
 	protected static final boolean DEFAULT_EDEFAULT = false;
 
 	/**
-	 * The cached value of the '{@link #isDefault() <em>Default</em>}' attribute.
-	 * <!-- begin-user-doc --> <!--
+	 * The cached value of the '{@link #isDefault() <em>Default</em>}' attribute. <!-- begin-user-doc --> <!--
 	 * end-user-doc -->
+	 * 
 	 * @see #isDefault()
 	 * @generated
 	 * @ordered
@@ -168,6 +170,8 @@
 
 	private PrimaryVersionSpec sourceSpec;
 
+	private List<HistoryInfo> projectHistory;
+
 	/**
 	 * @return the nextSpec
 	 */
@@ -184,6 +188,7 @@
 
 	/**
 	 * <!-- begin-user-doc --> <!-- end-user-doc -->
+	 * 
 	 * @generated
 	 */
 	protected VersionIteratorImpl() {
@@ -192,6 +197,7 @@
 
 	/**
 	 * <!-- begin-user-doc --> <!-- end-user-doc -->
+	 * 
 	 * @generated
 	 */
 	@Override
@@ -201,6 +207,7 @@
 
 	/**
 	 * <!-- begin-user-doc --> <!-- end-user-doc -->
+	 * 
 	 * @generated
 	 */
 	public int getStepLength() {
@@ -209,17 +216,20 @@
 
 	/**
 	 * <!-- begin-user-doc --> <!-- end-user-doc -->
+	 * 
 	 * @generated
 	 */
 	public void setStepLength(int newStepLength) {
 		int oldStepLength = stepLength;
 		stepLength = newStepLength;
 		if (eNotificationRequired())
-			eNotify(new ENotificationImpl(this, Notification.SET, IteratorPackage.VERSION_ITERATOR__STEP_LENGTH, oldStepLength, stepLength));
+			eNotify(new ENotificationImpl(this, Notification.SET, IteratorPackage.VERSION_ITERATOR__STEP_LENGTH,
+				oldStepLength, stepLength));
 	}
 
 	/**
 	 * <!-- begin-user-doc --> <!-- end-user-doc -->
+	 * 
 	 * @generated
 	 */
 	public ProjectId getProjectId() {
@@ -228,38 +238,48 @@
 
 	/**
 	 * <!-- begin-user-doc --> <!-- end-user-doc -->
+	 * 
 	 * @generated
 	 */
 	public NotificationChain basicSetProjectId(ProjectId newProjectId, NotificationChain msgs) {
 		ProjectId oldProjectId = projectId;
 		projectId = newProjectId;
 		if (eNotificationRequired()) {
-			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, IteratorPackage.VERSION_ITERATOR__PROJECT_ID, oldProjectId, newProjectId);
-			if (msgs == null) msgs = notification; else msgs.add(notification);
+			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET,
+				IteratorPackage.VERSION_ITERATOR__PROJECT_ID, oldProjectId, newProjectId);
+			if (msgs == null)
+				msgs = notification;
+			else
+				msgs.add(notification);
 		}
 		return msgs;
 	}
 
 	/**
 	 * <!-- begin-user-doc --> <!-- end-user-doc -->
+	 * 
 	 * @generated
 	 */
 	public void setProjectId(ProjectId newProjectId) {
 		if (newProjectId != projectId) {
 			NotificationChain msgs = null;
 			if (projectId != null)
-				msgs = ((InternalEObject)projectId).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - IteratorPackage.VERSION_ITERATOR__PROJECT_ID, null, msgs);
+				msgs = ((InternalEObject) projectId).eInverseRemove(this, EOPPOSITE_FEATURE_BASE
+					- IteratorPackage.VERSION_ITERATOR__PROJECT_ID, null, msgs);
 			if (newProjectId != null)
-				msgs = ((InternalEObject)newProjectId).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - IteratorPackage.VERSION_ITERATOR__PROJECT_ID, null, msgs);
+				msgs = ((InternalEObject) newProjectId).eInverseAdd(this, EOPPOSITE_FEATURE_BASE
+					- IteratorPackage.VERSION_ITERATOR__PROJECT_ID, null, msgs);
 			msgs = basicSetProjectId(newProjectId, msgs);
-			if (msgs != null) msgs.dispatch();
-		}
-		else if (eNotificationRequired())
-			eNotify(new ENotificationImpl(this, Notification.SET, IteratorPackage.VERSION_ITERATOR__PROJECT_ID, newProjectId, newProjectId));
+			if (msgs != null)
+				msgs.dispatch();
+		} else if (eNotificationRequired())
+			eNotify(new ENotificationImpl(this, Notification.SET, IteratorPackage.VERSION_ITERATOR__PROJECT_ID,
+				newProjectId, newProjectId));
 	}
 
 	/**
 	 * <!-- begin-user-doc --> <!-- end-user-doc -->
+	 * 
 	 * @generated
 	 */
 	public boolean isForward() {
@@ -268,17 +288,20 @@
 
 	/**
 	 * <!-- begin-user-doc --> <!-- end-user-doc -->
+	 * 
 	 * @generated
 	 */
 	public void setForward(boolean newForward) {
 		boolean oldForward = forward;
 		forward = newForward;
 		if (eNotificationRequired())
-			eNotify(new ENotificationImpl(this, Notification.SET, IteratorPackage.VERSION_ITERATOR__FORWARD, oldForward, forward));
+			eNotify(new ENotificationImpl(this, Notification.SET, IteratorPackage.VERSION_ITERATOR__FORWARD,
+				oldForward, forward));
 	}
 
 	/**
 	 * <!-- begin-user-doc --> <!-- end-user-doc -->
+	 * 
 	 * @generated
 	 */
 	public boolean isReturnProjectDataCopy() {
@@ -287,17 +310,21 @@
 
 	/**
 	 * <!-- begin-user-doc --> <!-- end-user-doc -->
+	 * 
 	 * @generated
 	 */
 	public void setReturnProjectDataCopy(boolean newReturnProjectDataCopy) {
 		boolean oldReturnProjectDataCopy = returnProjectDataCopy;
 		returnProjectDataCopy = newReturnProjectDataCopy;
 		if (eNotificationRequired())
-			eNotify(new ENotificationImpl(this, Notification.SET, IteratorPackage.VERSION_ITERATOR__RETURN_PROJECT_DATA_COPY, oldReturnProjectDataCopy, returnProjectDataCopy));
+			eNotify(new ENotificationImpl(this, Notification.SET,
+				IteratorPackage.VERSION_ITERATOR__RETURN_PROJECT_DATA_COPY, oldReturnProjectDataCopy,
+				returnProjectDataCopy));
 	}
 
 	/**
 	 * <!-- begin-user-doc --> <!-- end-user-doc -->
+	 * 
 	 * @generated
 	 */
 	public VersionSpecQuery getVersionSpecQuery() {
@@ -306,38 +333,48 @@
 
 	/**
 	 * <!-- begin-user-doc --> <!-- end-user-doc -->
+	 * 
 	 * @generated
 	 */
 	public NotificationChain basicSetVersionSpecQuery(VersionSpecQuery newVersionSpecQuery, NotificationChain msgs) {
 		VersionSpecQuery oldVersionSpecQuery = versionSpecQuery;
 		versionSpecQuery = newVersionSpecQuery;
 		if (eNotificationRequired()) {
-			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, IteratorPackage.VERSION_ITERATOR__VERSION_SPEC_QUERY, oldVersionSpecQuery, newVersionSpecQuery);
-			if (msgs == null) msgs = notification; else msgs.add(notification);
+			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET,
+				IteratorPackage.VERSION_ITERATOR__VERSION_SPEC_QUERY, oldVersionSpecQuery, newVersionSpecQuery);
+			if (msgs == null)
+				msgs = notification;
+			else
+				msgs.add(notification);
 		}
 		return msgs;
 	}
 
 	/**
 	 * <!-- begin-user-doc --> <!-- end-user-doc -->
+	 * 
 	 * @generated
 	 */
 	public void setVersionSpecQuery(VersionSpecQuery newVersionSpecQuery) {
 		if (newVersionSpecQuery != versionSpecQuery) {
 			NotificationChain msgs = null;
 			if (versionSpecQuery != null)
-				msgs = ((InternalEObject)versionSpecQuery).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - IteratorPackage.VERSION_ITERATOR__VERSION_SPEC_QUERY, null, msgs);
+				msgs = ((InternalEObject) versionSpecQuery).eInverseRemove(this, EOPPOSITE_FEATURE_BASE
+					- IteratorPackage.VERSION_ITERATOR__VERSION_SPEC_QUERY, null, msgs);
 			if (newVersionSpecQuery != null)
-				msgs = ((InternalEObject)newVersionSpecQuery).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - IteratorPackage.VERSION_ITERATOR__VERSION_SPEC_QUERY, null, msgs);
+				msgs = ((InternalEObject) newVersionSpecQuery).eInverseAdd(this, EOPPOSITE_FEATURE_BASE
+					- IteratorPackage.VERSION_ITERATOR__VERSION_SPEC_QUERY, null, msgs);
 			msgs = basicSetVersionSpecQuery(newVersionSpecQuery, msgs);
-			if (msgs != null) msgs.dispatch();
-		}
-		else if (eNotificationRequired())
-			eNotify(new ENotificationImpl(this, Notification.SET, IteratorPackage.VERSION_ITERATOR__VERSION_SPEC_QUERY, newVersionSpecQuery, newVersionSpecQuery));
+			if (msgs != null)
+				msgs.dispatch();
+		} else if (eNotificationRequired())
+			eNotify(new ENotificationImpl(this, Notification.SET, IteratorPackage.VERSION_ITERATOR__VERSION_SPEC_QUERY,
+				newVersionSpecQuery, newVersionSpecQuery));
 	}
 
 	/**
 	 * <!-- begin-user-doc --> <!-- end-user-doc -->
+	 * 
 	 * @generated
 	 */
 	public boolean isDefault() {
@@ -346,141 +383,150 @@
 
 	/**
 	 * <!-- begin-user-doc --> <!-- end-user-doc -->
+	 * 
 	 * @generated
 	 */
 	public void setDefault(boolean newDefault) {
 		boolean oldDefault = default_;
 		default_ = newDefault;
 		if (eNotificationRequired())
-			eNotify(new ENotificationImpl(this, Notification.SET, IteratorPackage.VERSION_ITERATOR__DEFAULT, oldDefault, default_));
+			eNotify(new ENotificationImpl(this, Notification.SET, IteratorPackage.VERSION_ITERATOR__DEFAULT,
+				oldDefault, default_));
 	}
 
 	/**
 	 * <!-- begin-user-doc --> <!-- end-user-doc -->
+	 * 
 	 * @generated
 	 */
 	@Override
 	public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs) {
 		switch (featureID) {
-			case IteratorPackage.VERSION_ITERATOR__PROJECT_ID:
-				return basicSetProjectId(null, msgs);
-			case IteratorPackage.VERSION_ITERATOR__VERSION_SPEC_QUERY:
-				return basicSetVersionSpecQuery(null, msgs);
+		case IteratorPackage.VERSION_ITERATOR__PROJECT_ID:
+			return basicSetProjectId(null, msgs);
+		case IteratorPackage.VERSION_ITERATOR__VERSION_SPEC_QUERY:
+			return basicSetVersionSpecQuery(null, msgs);
 		}
 		return super.eInverseRemove(otherEnd, featureID, msgs);
 	}
 
 	/**
 	 * <!-- begin-user-doc --> <!-- end-user-doc -->
+	 * 
 	 * @generated
 	 */
 	@Override
 	public Object eGet(int featureID, boolean resolve, boolean coreType) {
 		switch (featureID) {
-			case IteratorPackage.VERSION_ITERATOR__STEP_LENGTH:
-				return new Integer(getStepLength());
-			case IteratorPackage.VERSION_ITERATOR__PROJECT_ID:
-				return getProjectId();
-			case IteratorPackage.VERSION_ITERATOR__FORWARD:
-				return isForward() ? Boolean.TRUE : Boolean.FALSE;
-			case IteratorPackage.VERSION_ITERATOR__RETURN_PROJECT_DATA_COPY:
-				return isReturnProjectDataCopy() ? Boolean.TRUE : Boolean.FALSE;
-			case IteratorPackage.VERSION_ITERATOR__VERSION_SPEC_QUERY:
-				return getVersionSpecQuery();
-			case IteratorPackage.VERSION_ITERATOR__DEFAULT:
-				return isDefault() ? Boolean.TRUE : Boolean.FALSE;
+		case IteratorPackage.VERSION_ITERATOR__STEP_LENGTH:
+			return new Integer(getStepLength());
+		case IteratorPackage.VERSION_ITERATOR__PROJECT_ID:
+			return getProjectId();
+		case IteratorPackage.VERSION_ITERATOR__FORWARD:
+			return isForward() ? Boolean.TRUE : Boolean.FALSE;
+		case IteratorPackage.VERSION_ITERATOR__RETURN_PROJECT_DATA_COPY:
+			return isReturnProjectDataCopy() ? Boolean.TRUE : Boolean.FALSE;
+		case IteratorPackage.VERSION_ITERATOR__VERSION_SPEC_QUERY:
+			return getVersionSpecQuery();
+		case IteratorPackage.VERSION_ITERATOR__DEFAULT:
+			return isDefault() ? Boolean.TRUE : Boolean.FALSE;
 		}
 		return super.eGet(featureID, resolve, coreType);
 	}
 
 	/**
 	 * <!-- begin-user-doc --> <!-- end-user-doc -->
+	 * 
 	 * @generated
 	 */
 	@Override
 	public void eSet(int featureID, Object newValue) {
 		switch (featureID) {
-			case IteratorPackage.VERSION_ITERATOR__STEP_LENGTH:
-				setStepLength(((Integer)newValue).intValue());
-				return;
-			case IteratorPackage.VERSION_ITERATOR__PROJECT_ID:
-				setProjectId((ProjectId)newValue);
-				return;
-			case IteratorPackage.VERSION_ITERATOR__FORWARD:
-				setForward(((Boolean)newValue).booleanValue());
-				return;
-			case IteratorPackage.VERSION_ITERATOR__RETURN_PROJECT_DATA_COPY:
-				setReturnProjectDataCopy(((Boolean)newValue).booleanValue());
-				return;
-			case IteratorPackage.VERSION_ITERATOR__VERSION_SPEC_QUERY:
-				setVersionSpecQuery((VersionSpecQuery)newValue);
-				return;
-			case IteratorPackage.VERSION_ITERATOR__DEFAULT:
-				setDefault(((Boolean)newValue).booleanValue());
-				return;
+		case IteratorPackage.VERSION_ITERATOR__STEP_LENGTH:
+			setStepLength(((Integer) newValue).intValue());
+			return;
+		case IteratorPackage.VERSION_ITERATOR__PROJECT_ID:
+			setProjectId((ProjectId) newValue);
+			return;
+		case IteratorPackage.VERSION_ITERATOR__FORWARD:
+			setForward(((Boolean) newValue).booleanValue());
+			return;
+		case IteratorPackage.VERSION_ITERATOR__RETURN_PROJECT_DATA_COPY:
+			setReturnProjectDataCopy(((Boolean) newValue).booleanValue());
+			return;
+		case IteratorPackage.VERSION_ITERATOR__VERSION_SPEC_QUERY:
+			setVersionSpecQuery((VersionSpecQuery) newValue);
+			return;
+		case IteratorPackage.VERSION_ITERATOR__DEFAULT:
+			setDefault(((Boolean) newValue).booleanValue());
+			return;
 		}
 		super.eSet(featureID, newValue);
 	}
 
 	/**
 	 * <!-- begin-user-doc --> <!-- end-user-doc -->
+	 * 
 	 * @generated
 	 */
 	@Override
 	public void eUnset(int featureID) {
 		switch (featureID) {
-			case IteratorPackage.VERSION_ITERATOR__STEP_LENGTH:
-				setStepLength(STEP_LENGTH_EDEFAULT);
-				return;
-			case IteratorPackage.VERSION_ITERATOR__PROJECT_ID:
-				setProjectId((ProjectId)null);
-				return;
-			case IteratorPackage.VERSION_ITERATOR__FORWARD:
-				setForward(FORWARD_EDEFAULT);
-				return;
-			case IteratorPackage.VERSION_ITERATOR__RETURN_PROJECT_DATA_COPY:
-				setReturnProjectDataCopy(RETURN_PROJECT_DATA_COPY_EDEFAULT);
-				return;
-			case IteratorPackage.VERSION_ITERATOR__VERSION_SPEC_QUERY:
-				setVersionSpecQuery((VersionSpecQuery)null);
-				return;
-			case IteratorPackage.VERSION_ITERATOR__DEFAULT:
-				setDefault(DEFAULT_EDEFAULT);
-				return;
+		case IteratorPackage.VERSION_ITERATOR__STEP_LENGTH:
+			setStepLength(STEP_LENGTH_EDEFAULT);
+			return;
+		case IteratorPackage.VERSION_ITERATOR__PROJECT_ID:
+			setProjectId((ProjectId) null);
+			return;
+		case IteratorPackage.VERSION_ITERATOR__FORWARD:
+			setForward(FORWARD_EDEFAULT);
+			return;
+		case IteratorPackage.VERSION_ITERATOR__RETURN_PROJECT_DATA_COPY:
+			setReturnProjectDataCopy(RETURN_PROJECT_DATA_COPY_EDEFAULT);
+			return;
+		case IteratorPackage.VERSION_ITERATOR__VERSION_SPEC_QUERY:
+			setVersionSpecQuery((VersionSpecQuery) null);
+			return;
+		case IteratorPackage.VERSION_ITERATOR__DEFAULT:
+			setDefault(DEFAULT_EDEFAULT);
+			return;
 		}
 		super.eUnset(featureID);
 	}
 
 	/**
 	 * <!-- begin-user-doc --> <!-- end-user-doc -->
+	 * 
 	 * @generated
 	 */
 	@Override
 	public boolean eIsSet(int featureID) {
 		switch (featureID) {
-			case IteratorPackage.VERSION_ITERATOR__STEP_LENGTH:
-				return stepLength != STEP_LENGTH_EDEFAULT;
-			case IteratorPackage.VERSION_ITERATOR__PROJECT_ID:
-				return projectId != null;
-			case IteratorPackage.VERSION_ITERATOR__FORWARD:
-				return forward != FORWARD_EDEFAULT;
-			case IteratorPackage.VERSION_ITERATOR__RETURN_PROJECT_DATA_COPY:
-				return returnProjectDataCopy != RETURN_PROJECT_DATA_COPY_EDEFAULT;
-			case IteratorPackage.VERSION_ITERATOR__VERSION_SPEC_QUERY:
-				return versionSpecQuery != null;
-			case IteratorPackage.VERSION_ITERATOR__DEFAULT:
-				return default_ != DEFAULT_EDEFAULT;
+		case IteratorPackage.VERSION_ITERATOR__STEP_LENGTH:
+			return stepLength != STEP_LENGTH_EDEFAULT;
+		case IteratorPackage.VERSION_ITERATOR__PROJECT_ID:
+			return projectId != null;
+		case IteratorPackage.VERSION_ITERATOR__FORWARD:
+			return forward != FORWARD_EDEFAULT;
+		case IteratorPackage.VERSION_ITERATOR__RETURN_PROJECT_DATA_COPY:
+			return returnProjectDataCopy != RETURN_PROJECT_DATA_COPY_EDEFAULT;
+		case IteratorPackage.VERSION_ITERATOR__VERSION_SPEC_QUERY:
+			return versionSpecQuery != null;
+		case IteratorPackage.VERSION_ITERATOR__DEFAULT:
+			return default_ != DEFAULT_EDEFAULT;
 		}
 		return super.eIsSet(featureID);
 	}
 
 	/**
 	 * <!-- begin-user-doc --> <!-- end-user-doc -->
+	 * 
 	 * @generated
 	 */
 	@Override
 	public String toString() {
-		if (eIsProxy()) return super.toString();
+		if (eIsProxy())
+			return super.toString();
 
 		StringBuffer result = new StringBuffer(super.toString());
 		result.append(" (stepLength: ");
@@ -656,6 +702,19 @@
 			throw new IteratorException("Cannot connect to server.", e);
 		}
 
+		HistoryQuery historyQuery = VersioningFactory.eINSTANCE.createHistoryQuery();
+		historyQuery.setSource(this.getStart());
+		historyQuery.setTarget(this.getEnd());
+		projectHistory = null;
+		try {
+			projectHistory = this.getConnectionManager().getHistoryInfo(usersession.getSessionId(), projectId,
+				historyQuery);
+		} catch (InvalidVersionSpecException e) {
+			throw new IteratorException("Could not get the history info.", e);
+		} catch (EmfStoreException e) {
+			throw new IteratorException("Cannot connect to server.", e);
+		}
+
 		// sanity checks
 		if (isForward()) {
 			if (this.start.compareTo(this.end) >= 0) {
@@ -706,4 +765,8 @@
 		return usersession;
 	}
 
+	public List<HistoryInfo> getProjectHistory() {
+		return projectHistory;
+	}
+
 } // VersionIteratorImpl
Index: src/org/unicase/analyzer/iterator/VersionIterator.java
===================================================================
--- src/org/unicase/analyzer/iterator/VersionIterator.java	(revision 4969)
+++ src/org/unicase/analyzer/iterator/VersionIterator.java	(working copy)
@@ -6,11 +6,13 @@
 package org.unicase.analyzer.iterator;
 
 import java.util.Iterator;
+import java.util.List;
 
 import org.eclipse.emf.ecore.EObject;
 import org.unicase.analyzer.ProjectAnalysisData;
 import org.unicase.analyzer.exceptions.IteratorException;
 import org.unicase.emfstore.esmodel.ProjectId;
+import org.unicase.emfstore.esmodel.versioning.HistoryInfo;
 import org.unicase.workspace.Usersession;
 import org.unicase.workspace.connectionmanager.ConnectionManager;
 
@@ -18,32 +20,32 @@
  * <!-- begin-user-doc --> A representation of the model object '<em><b>Version Iterator</b></em>'.
  * 
  * @implements Iterator<ProjectAnalysisData> <!-- end-user-doc -->
- *
- * <p>
- * The following features are supported:
- * <ul>
- *   <li>{@link org.unicase.analyzer.iterator.VersionIterator#getStepLength <em>Step Length</em>}</li>
- *   <li>{@link org.unicase.analyzer.iterator.VersionIterator#getProjectId <em>Project Id</em>}</li>
- *   <li>{@link org.unicase.analyzer.iterator.VersionIterator#isForward <em>Forward</em>}</li>
- *   <li>{@link org.unicase.analyzer.iterator.VersionIterator#isReturnProjectDataCopy <em>Return Project Data Copy</em>}</li>
- *   <li>{@link org.unicase.analyzer.iterator.VersionIterator#getVersionSpecQuery <em>Version Spec Query</em>}</li>
- *   <li>{@link org.unicase.analyzer.iterator.VersionIterator#isDefault <em>Default</em>}</li>
- * </ul>
- * </p>
- *
+ *             <p>
+ *             The following features are supported:
+ *             <ul>
+ *             <li>{@link org.unicase.analyzer.iterator.VersionIterator#getStepLength <em>Step Length</em>}</li>
+ *             <li>{@link org.unicase.analyzer.iterator.VersionIterator#getProjectId <em>Project Id</em>}</li>
+ *             <li>{@link org.unicase.analyzer.iterator.VersionIterator#isForward <em>Forward</em>}</li>
+ *             <li>{@link org.unicase.analyzer.iterator.VersionIterator#isReturnProjectDataCopy <em>Return Project Data
+ *             Copy</em>}</li>
+ *             <li>{@link org.unicase.analyzer.iterator.VersionIterator#getVersionSpecQuery <em>Version Spec Query</em>}
+ *             </li>
+ *             <li>{@link org.unicase.analyzer.iterator.VersionIterator#isDefault <em>Default</em>}</li>
+ *             </ul>
+ *             </p>
  * @see org.unicase.analyzer.iterator.IteratorPackage#getVersionIterator()
  * @model
  * @generated
  */
 public interface VersionIterator extends EObject, Iterator<ProjectAnalysisData> {
 	/**
-	 * Returns the value of the '<em><b>Step Length</b></em>' attribute.
-	 * <!-- begin-user-doc -->
+	 * Returns the value of the '<em><b>Step Length</b></em>' attribute. <!-- begin-user-doc -->
 	 * <p>
 	 * If the meaning of the '<em>Step Length</em>' attribute isn't clear, there really should be more of a description
 	 * here...
 	 * </p>
 	 * <!-- end-user-doc -->
+	 * 
 	 * @return the value of the '<em>Step Length</em>' attribute.
 	 * @see #setStepLength(int)
 	 * @see org.unicase.analyzer.iterator.IteratorPackage#getVersionIterator_StepLength()
@@ -53,8 +55,9 @@
 	int getStepLength();
 
 	/**
-	 * Sets the value of the '{@link org.unicase.analyzer.iterator.VersionIterator#getStepLength <em>Step Length</em>}' attribute.
-	 * <!-- begin-user-doc --> <!-- end-user-doc -->
+	 * Sets the value of the '{@link org.unicase.analyzer.iterator.VersionIterator#getStepLength <em>Step Length</em>}'
+	 * attribute. <!-- begin-user-doc --> <!-- end-user-doc -->
+	 * 
 	 * @param value the new value of the '<em>Step Length</em>' attribute.
 	 * @see #getStepLength()
 	 * @generated
@@ -62,13 +65,13 @@
 	void setStepLength(int value);
 
 	/**
-	 * Returns the value of the '<em><b>Project Id</b></em>' containment reference.
-	 * <!-- begin-user-doc -->
+	 * Returns the value of the '<em><b>Project Id</b></em>' containment reference. <!-- begin-user-doc -->
 	 * <p>
 	 * If the meaning of the '<em>Project Id</em>' containment reference isn't clear, there really should be more of a
 	 * description here...
 	 * </p>
 	 * <!-- end-user-doc -->
+	 * 
 	 * @return the value of the '<em>Project Id</em>' containment reference.
 	 * @see #setProjectId(ProjectId)
 	 * @see org.unicase.analyzer.iterator.IteratorPackage#getVersionIterator_ProjectId()
@@ -78,8 +81,9 @@
 	ProjectId getProjectId();
 
 	/**
-	 * Sets the value of the '{@link org.unicase.analyzer.iterator.VersionIterator#getProjectId <em>Project Id</em>}' containment reference.
-	 * <!-- begin-user-doc --> <!-- end-user-doc -->
+	 * Sets the value of the '{@link org.unicase.analyzer.iterator.VersionIterator#getProjectId <em>Project Id</em>}'
+	 * containment reference. <!-- begin-user-doc --> <!-- end-user-doc -->
+	 * 
 	 * @param value the new value of the '<em>Project Id</em>' containment reference.
 	 * @see #getProjectId()
 	 * @generated
@@ -87,13 +91,13 @@
 	void setProjectId(ProjectId value);
 
 	/**
-	 * Returns the value of the '<em><b>Forward</b></em>' attribute.
-	 * <!-- begin-user-doc -->
+	 * Returns the value of the '<em><b>Forward</b></em>' attribute. <!-- begin-user-doc -->
 	 * <p>
 	 * If the meaning of the '<em>Forward</em>' attribute isn't clear, there really should be more of a description
 	 * here...
 	 * </p>
 	 * <!-- end-user-doc -->
+	 * 
 	 * @return the value of the '<em>Forward</em>' attribute.
 	 * @see #setForward(boolean)
 	 * @see org.unicase.analyzer.iterator.IteratorPackage#getVersionIterator_Forward()
@@ -103,8 +107,9 @@
 	boolean isForward();
 
 	/**
-	 * Sets the value of the '{@link org.unicase.analyzer.iterator.VersionIterator#isForward <em>Forward</em>}' attribute.
-	 * <!-- begin-user-doc --> <!-- end-user-doc -->
+	 * Sets the value of the '{@link org.unicase.analyzer.iterator.VersionIterator#isForward <em>Forward</em>}'
+	 * attribute. <!-- begin-user-doc --> <!-- end-user-doc -->
+	 * 
 	 * @param value the new value of the '<em>Forward</em>' attribute.
 	 * @see #isForward()
 	 * @generated
@@ -112,13 +117,13 @@
 	void setForward(boolean value);
 
 	/**
-	 * Returns the value of the '<em><b>Return Project Data Copy</b></em>' attribute.
-	 * <!-- begin-user-doc -->
+	 * Returns the value of the '<em><b>Return Project Data Copy</b></em>' attribute. <!-- begin-user-doc -->
 	 * <p>
 	 * If the meaning of the '<em>Return Project Data Copy</em>' attribute isn't clear, there really should be more of a
 	 * description here...
 	 * </p>
 	 * <!-- end-user-doc -->
+	 * 
 	 * @return the value of the '<em>Return Project Data Copy</em>' attribute.
 	 * @see #setReturnProjectDataCopy(boolean)
 	 * @see org.unicase.analyzer.iterator.IteratorPackage#getVersionIterator_ReturnProjectDataCopy()
@@ -128,8 +133,9 @@
 	boolean isReturnProjectDataCopy();
 
 	/**
-	 * Sets the value of the '{@link org.unicase.analyzer.iterator.VersionIterator#isReturnProjectDataCopy <em>Return Project Data Copy</em>}' attribute.
-	 * <!-- begin-user-doc --> <!-- end-user-doc -->
+	 * Sets the value of the '{@link org.unicase.analyzer.iterator.VersionIterator#isReturnProjectDataCopy
+	 * <em>Return Project Data Copy</em>}' attribute. <!-- begin-user-doc --> <!-- end-user-doc -->
+	 * 
 	 * @param value the new value of the '<em>Return Project Data Copy</em>' attribute.
 	 * @see #isReturnProjectDataCopy()
 	 * @generated
@@ -137,13 +143,13 @@
 	void setReturnProjectDataCopy(boolean value);
 
 	/**
-	 * Returns the value of the '<em><b>Version Spec Query</b></em>' containment reference.
-	 * <!-- begin-user-doc -->
+	 * Returns the value of the '<em><b>Version Spec Query</b></em>' containment reference. <!-- begin-user-doc -->
 	 * <p>
 	 * If the meaning of the '<em>Version Spec Query</em>' containment reference isn't clear, there really should be
 	 * more of a description here...
 	 * </p>
 	 * <!-- end-user-doc -->
+	 * 
 	 * @return the value of the '<em>Version Spec Query</em>' containment reference.
 	 * @see #setVersionSpecQuery(VersionSpecQuery)
 	 * @see org.unicase.analyzer.iterator.IteratorPackage#getVersionIterator_VersionSpecQuery()
@@ -153,8 +159,9 @@
 	VersionSpecQuery getVersionSpecQuery();
 
 	/**
-	 * Sets the value of the '{@link org.unicase.analyzer.iterator.VersionIterator#getVersionSpecQuery <em>Version Spec Query</em>}' containment reference.
-	 * <!-- begin-user-doc --> <!-- end-user-doc -->
+	 * Sets the value of the '{@link org.unicase.analyzer.iterator.VersionIterator#getVersionSpecQuery
+	 * <em>Version Spec Query</em>}' containment reference. <!-- begin-user-doc --> <!-- end-user-doc -->
+	 * 
 	 * @param value the new value of the '<em>Version Spec Query</em>' containment reference.
 	 * @see #getVersionSpecQuery()
 	 * @generated
@@ -162,13 +169,13 @@
 	void setVersionSpecQuery(VersionSpecQuery value);
 
 	/**
-	 * Returns the value of the '<em><b>Default</b></em>' attribute.
-	 * <!-- begin-user-doc -->
+	 * Returns the value of the '<em><b>Default</b></em>' attribute. <!-- begin-user-doc -->
 	 * <p>
 	 * If the meaning of the '<em>Default</em>' attribute isn't clear, there really should be more of a description
 	 * here...
 	 * </p>
 	 * <!-- end-user-doc -->
+	 * 
 	 * @return the value of the '<em>Default</em>' attribute.
 	 * @see #setDefault(boolean)
 	 * @see org.unicase.analyzer.iterator.IteratorPackage#getVersionIterator_Default()
@@ -178,8 +185,9 @@
 	boolean isDefault();
 
 	/**
-	 * Sets the value of the '{@link org.unicase.analyzer.iterator.VersionIterator#isDefault <em>Default</em>}' attribute.
-	 * <!-- begin-user-doc --> <!-- end-user-doc -->
+	 * Sets the value of the '{@link org.unicase.analyzer.iterator.VersionIterator#isDefault <em>Default</em>}'
+	 * attribute. <!-- begin-user-doc --> <!-- end-user-doc -->
+	 * 
 	 * @param value the new value of the '<em>Default</em>' attribute.
 	 * @see #isDefault()
 	 * @generated
@@ -238,4 +246,6 @@
 	 * @return the usersession
 	 */
 	Usersession getUsersession();
+
+	List<HistoryInfo> getProjectHistory();// For evaluation paper
 } // VersionIterator
