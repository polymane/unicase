/*
 * Copyright (c) 2007 Borland Software Corporation
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Dmitry Stadnik (Borland) - initial API and implementation
 */

«IMPORT "http://www.eclipse.org/gmf/2008/GenModel"»
«IMPORT "http://www.eclipse.org/emf/2002/GenModel"»
«IMPORT "http://www.eclipse.org/emf/2002/Ecore"»
«EXTENSION xpt::diagram::Utils»

«DEFINE extensions FOR gmfgen::GenDiagram-»

   <extension point="org.eclipse.gmf.runtime.diagram.core.viewProviders">
      «EXPAND xpt::Common::xmlGeneratedTag»
      <viewProvider class="«getNotationViewProviderQualifiedClassName()»">
         <Priority name="«notationViewProviderPriority»"/>
         <context viewClass="org.eclipse.gmf.runtime.notation.Diagram" semanticHints="«editorGen.modelID»"/>
         <context viewClass="org.eclipse.gmf.runtime.notation.Node" semanticHints=""/>
         <context viewClass="org.eclipse.gmf.runtime.notation.Edge" semanticHints=""/>
      </viewProvider>
   </extension>

   <extension point="org.eclipse.gmf.runtime.diagram.ui.editpartProviders">
      «EXPAND xpt::Common::xmlGeneratedTag»
      <editpartProvider class="«getEditPartProviderQualifiedClassName()»">
         <Priority name="«editPartProviderPriority»"/>
      </editpartProvider>
   </extension>

   <extension point="org.eclipse.gmf.runtime.emf.ui.modelingAssistantProviders">
      «EXPAND xpt::Common::xmlGeneratedTag»
      <modelingAssistantProvider class="«getModelingAssistantProviderQualifiedClassName()»">
         <Priority name="«modelingAssistantProviderPriority»"/>
      </modelingAssistantProvider>
   </extension>

   <extension point="org.eclipse.gmf.runtime.common.ui.services.iconProviders">
      «EXPAND xpt::Common::xmlGeneratedTag»
      <IconProvider class="«getIconProviderQualifiedClassName()»">
         <Priority name="«iconProviderPriority»"/>
      </IconProvider>
   </extension>

   <extension point="org.eclipse.gmf.runtime.common.ui.services.parserProviders">
      «EXPAND xpt::Common::xmlGeneratedTag»
      <ParserProvider class="«getParserProviderQualifiedClassName()»">
         <Priority name="«parserProviderPriority»"/>
      </ParserProvider>
   </extension>
«IF generateShortcutIcon()-»

   <extension point="org.eclipse.gmf.runtime.diagram.ui.decoratorProviders">
      «EXPAND xpt::Common::xmlGeneratedTag»
      <decoratorProvider class="«getShortcutsDecoratorProviderQualifiedClassName()»">
         <Priority name="«shortcutsDecoratorProviderPriority»"/>
      </decoratorProvider>
   </extension>
«ENDIF-»

   <extension point="org.eclipse.gmf.runtime.emf.type.core.elementTypes">
      «EXPAND xpt::Common::xmlGeneratedTag»
«FOREACH getElements() AS e-»
«EXPAND elementTypeSafe FOR e.elementType-»
«ENDFOREACH-»
   </extension>

   <extension point="org.eclipse.gmf.runtime.emf.type.core.elementTypeBindings">
      «EXPAND xpt::Common::xmlGeneratedTag»
      <clientContext id="«editorGen.modelID»ClientContext">
         <enablement>
            <test
               property="org.eclipse.gmf.runtime.emf.core.editingDomain"
               value="«editingDomainID»"/>
         </enablement>
      </clientContext> 
      <binding context="«editorGen.modelID»ClientContext">
«FOREACH getElements() AS e-»
         <elementType ref="«e.elementType.uniqueIdentifier»"/>
«ENDFOREACH-»
         <advice ref="org.eclipse.gmf.runtime.diagram.core.advice.notationDepdendents"/>
      </binding>
   </extension>
   <extension point="org.eclipse.core.expressions.propertyTesters">
    <propertyTester
	     class="org.unicase.ui.common.diagram.part.DiagramTypeTester"
	     id="org.unicase.ui.common.diagram.part.DiagramTypeTester"
	     namespace="org.unicase.ui.common"
	     properties="isDiagramType"
	     type="org.unicase.model.ModelElement">
    </propertyTester>
   </extension>
«ENDDEFINE»

«DEFINE elementTypeSafe FOR gmfgen::ElementType-»
«IF !definedExternally-»
«EXPAND elementType-»
«ENDIF-»
«ENDDEFINE»

«DEFINE elementType FOR gmfgen::ElementType»
«ERROR "Unknown element type: " + this»
«ENDDEFINE»

«DEFINE elementType FOR gmfgen::MetamodelType-»
      <metamodel nsURI="«getMetaClass().genPackage.ecorePackage.nsURI»">
         <metamodelType
               id="«uniqueIdentifier»"
«IF null != displayName-»
               name="%metatype.name.«diagramElement.getUniqueIdentifier()»"
«ENDIF-»
               kind="org.eclipse.gmf.runtime.emf.type.core.IHintedType"
               eclass="«getMetaClass().ecoreClass.name»"
               edithelper="«getEditHelperQualifiedClassName()»">
            <param name="semanticHint" value="«diagramElement.visualID»"/>
         </metamodelType>
      </metamodel>
«ENDDEFINE»

«DEFINE elementType FOR gmfgen::SpecializationType-»
«IF null == getMetamodelClass()-»
«EXPAND specializationType-»
«ELSE-»
      <metamodel nsURI="«getMetamodelClass().genPackage.ecorePackage.nsURI»">
«EXPAND specializationType-»
      </metamodel>
«ENDIF-»
«ENDDEFINE»

«DEFINE specializationType FOR gmfgen::SpecializationType-»
         <specializationType
               id="«uniqueIdentifier»"
«IF null != displayName-»
               name="%metatype.name.«diagramElement.getUniqueIdentifier()»"
«ENDIF-»
               kind="org.eclipse.gmf.runtime.emf.type.core.IHintedType"«IF editHelperAdviceClassName != null»
               edithelperadvice="«getEditHelperAdviceQualifiedClassName()»"«ENDIF»>
            <specializes id="«null == metamodelType ? "org.eclipse.gmf.runtime.emf.type.core.null" : metamodelType.uniqueIdentifier»"/>
            <param name="semanticHint" value="«diagramElement.visualID»"/>
         </specializationType>
«ENDDEFINE»

«DEFINE elementType FOR gmfgen::NotationType-»
      <specializationType
            id="«uniqueIdentifier»"
«IF null != displayName-»
            name="%metatype.name.«diagramElement.getUniqueIdentifier()»"
«ENDIF-»
            kind="org.eclipse.gmf.runtime.diagram.ui.util.INotationType">
         <specializes id="org.eclipse.gmf.runtime.emf.type.core.null"/>
         <param name="semanticHint" value="«diagramElement.visualID»"/>
      </specializationType>
«ENDDEFINE»

«DEFINE i18n FOR gmfgen::GenDiagram-»

# Providers
«EXPAND internal_i18n FOREACH getElements().elementType»
«ENDDEFINE»

«DEFINE internal_i18n FOR gmfgen::ElementType-»
«IF null != displayName && !definedExternally»metatype.name.«diagramElement.getUniqueIdentifier()»=«displayName»«ENDIF»
«ENDDEFINE»
